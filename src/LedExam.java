public class LedExam {
    public static void main(String[] args){

        //클래스를 테스트 해본다 TV라는 타입으로 참조변수를 만들어줄수있다.
        //인터페이스도 타입이 될 수 있다. 이 인터페이스가 LedTV라는것을 구현해서 사용할 수 있다.
        //LedTV가 모든 인터페이스를 구현하고 있기 떄문에 TV타입으로 형변환이 가능하다
        TV tv= new LedTV(); //참조변수의 타입으로 인터페이스를 사용할 수 있다. 인터페이스가 가지고 있는 메서드만 이용할 수 있다
        // 인터페이스이긴 하지만 상속의 개념과 같다.
        //TV라는 인터페이스는 타입이 될수 있지만 TV가 가지고 있는 값만 사용 가능
        //LedTV가 TV라는 인터페이스가 가지지 않은 기능을 확장할떄는 클래스의 형변환을 이용해서 사용한다.
        tv.turnOn();
        tv.changeChannel(8);
        tv.changeVolume(39);
        tv.turnOff();
    }
}

//참조형 변수 타입 (클래스,인터페이스,배열)
//전에 상속에서 사용했던것과 같다.

//진짜 인터페이스를 사용해야 하는 중요한 이유중 하나는
//만약에 TV라는 인터페이스를 구현하는 클래스가 LedTV,LcdTV 등등 다른 TV들이 있을텐데, 그 LcdTV도 TV라는 인터페이스를 구현할 수 있다.
//실제 구현하는 내용들은 그 LcdTV에 맞는 TV로 할 수 있겠죠.사용하는 부분은 LedTV대신에 Tv tv = new LcdTV로만 변경하면 나머지 부분은 똑같이 동작 할 수 있다
//동일한 인터페이스를 구현한다는 것은 클래스의 사용법이 똑같다는 것을 의미한다.
// 인터페이스를 쓰는 중요한 이유 중 하나 //클래스는 이렇게 인터페이스를 구현해 사용할 수 있고 여러개 구현해 사용할 수도 있다.